@font-face {
  font-family: 'GeneralSans-Variable';

  src: url('../../src/fonts/GeneralSans-Variable.woff2') format('woff2'),
       url('../../src/fonts/GeneralSans-Variable.woff') format('woff'),
       url('../../src/fonts/GeneralSans-Variable.ttf') format('truetype');

  font-weight: 200 700;

  font-display: swap;

  font-style: normal;
}

/* Logo hover effect - makes letters and text visible only on hover */

.logo-letter,
.logo-text,
.logo-border {
  transition: fill 0.3s ease, stroke 0.3s ease;
}

/* Hide the letters (white paths) by default */

.logo-letter {
  fill: transparent !important;
}

/* Hide the "mobile" text (black paths) by default */

.logo-text {
  fill: transparent !important;
}

/* Hide the border of the mobile text container by default */

.logo-border {
  stroke: transparent !important;
}

/* Show the letters on hover */

a:hover .logo-letter {
  fill: white !important;
}

/* Show the "mobile" text on hover */

a:hover .logo-text {
  fill: black !important;
}

/* Show the border on hover */

a:hover .logo-border {
  stroke: black !important;
}

:root {
  --plyr-color-main: #ffffff;
  --color-bg: #F9F8F8;
  --color-text: #020617;
  /* Add transition for theme changes */
  transition: color 0.5s ease, background-color 0.5s ease, border-color 0.5s ease;
}

.dark {
  --color-bg: #171717;
  /* Changed to neutral-900 as requested */
  --color-text: #F9F8F8;
}

/* Ensure elements inherit the transition */

*, *::before, *::after {
  transition: inherit;
}

/* Add specific transitions for elements that change with theme */

body {
  transition: background-color 0.5s ease, color 0.5s ease;
}

a, button, svg, path {
  transition: color 0.5s ease, fill 0.5s ease, stroke 0.5s ease, background-color 0.5s ease, border-color 0.5s ease;
}

/* Add transitions for main content areas */

.page-wrapper main,
.page-base .page-wrapper main,
.swup-page-home .page-wrapper main {
  transition: background-color 0.5s ease, border-color 0.5s ease;
}

/* Class added during theme transition */

.theme-transitioning {
  /* Prevent interaction during transition */
  pointer-events: none;
}

/* Disable transitions for users who prefer reduced motion */

@media (prefers-reduced-motion: reduce) {
  :root {
    transition: none;
  }

  *, *::before, *::after {
    transition: none !important;
  }
}

.page-wrapper {
  main {
    max-height: 100vh;
    overflow-y: auto;
  }
}

/* Contribution pill scrollbar styling */

.contribution-pill::-webkit-scrollbar {
  height: 4px;
}

.contribution-pill::-webkit-scrollbar-track {
  background: transparent;
}

.contribution-pill::-webkit-scrollbar-thumb {
  background: #000;
  border-radius: 4px;
}

.contribution-pill {
  scrollbar-width: thin;
  scrollbar-color: #000 transparent;
  max-width: calc(100vw - 2rem);
}

.contribution-pill > div {
  min-width: -moz-min-content;
  min-width: min-content;
}

@media (min-width: 768px) {
  .contribution-pill {
    max-width: 100%;
  }
}

/* Dark mode styles for page-base */

.dark .page-base .page-wrapper main {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
  background-color: var(--color-bg);
}

/* Dark mode styles for swup-page-home */

.dark .swup-page-home .page-wrapper main {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
  background-color: var(--color-bg);
}

/* Dark mode styles for contribution pill scrollbar */

.dark .contribution-pill::-webkit-scrollbar-thumb {
  background: #fff;
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;
}

.dark .contribution-pill {
  scrollbar-color: #fff transparent;
  transition: scrollbar-color 0.5s ease;
}

/* Light mode scrollbar transition */

.contribution-pill::-webkit-scrollbar-thumb {
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;
}

.contribution-pill {
  transition: scrollbar-color 0.5s ease;
}

nav ul{
  opacity: 0;
  transform: rotate3d(0, 0, 1, 10deg) translateX(100%) translateY(-100%);
  transition: all 0.5s ease-in-out;
}

nav ul.navin{
  display: flex;
  opacity: 1;
  transition: all 0.3s ease-in-out;
  transform: rotate(0deg) translateX(0%) translateY(0%);
}

nav ul.navout{
  opacity: 0;
  transform: rotate3d(0, 0, 1, -10deg) translateY(100%);
  transition: all 0.5s ease-in-out;
}

.block-type-heading h2 {
  margin-bottom: 1rem;
  font-size: clamp(1.5rem, 2vw, 2.35rem);
  font-weight: 500;
  line-height: 3rem;
}

.block-type-text p {
  margin-top: 1rem;
  margin-bottom: 1rem;
  margin-left: 1rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
  line-height: 1.5;
}

@media (min-width: 768px) {
  .block-type-text p {
    margin-left: 5rem;
    line-height: 2rem;
  }
}

.block-type-text p a {
  border-bottom-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
}

.block-type-text p a:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
}

.block-type-text p a {
  cursor: url('../images/tinyarrow.png'), auto;
}

.block-type-image figure figcaption {
  margin-top: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.block-type-gallery {
  margin-bottom: 1rem;
}

.block-type-gallery ul {
  margin-top: 1rem;
  display: flex;
  gap: 1rem;
}

.block-type-gallery ul li {
  width: 100%;
}

.block-type-gallery ul li img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.page{
  margin-left: clamp(2rem, 10vw, 15vw);
}

.listing a {
  opacity: 0;
}

.article-animation {
  animation: fadeUp 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

.title-container {
  overflow: hidden;
}

h1 {
  opacity: 0;
  transform-origin: left;
  animation: fadeInUp 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.5s forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  0%, 50% {
    transform: translateY(100%);
    opacity: 0;
  }

  50%, 80% {
    opacity: 1;
    transform: translateY(0) rotate3d(0, 0, 1, 1deg);
  }

  80%, 100% {
    opacity: 1;
    transform: translateY(0) rotate3d(0, 0, 1, 0);
  }
}

@keyframes fadeUp {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }

  100% {
    opacity: 1;
    transform: translateY(0) rotate3d(0, 0, 1, 0);
  }
}

@keyframes fadeUpFull {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }

  100% {
    opacity: 1;
    transform: translateY(-100) rotate3d(0, 0, 1, 0);
  }
}

@keyframes fadeOutFull {
  0% {
    opacity: 1;
    transform: translateY(0) rotate3d(0, 0, 1, 0);
  }

  100% {
    opacity: 0;
    transform: translateY(110vh);
  }
}

body.no-scroll {
  overflow: hidden;
}

.text-subtitle {
  opacity: 0;
  transform-origin: left;
  animation: fadeUp 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.7s forwards;
}

.no-effect {
  opacity: 1;
  transform-origin: left;
  animation: none;
}

.tags {
  opacity: 0;
  transform-origin: left;
  animation: fadeUp 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.9s forwards;
}

.main-content {
  opacity: 0;
  transform-origin: left;
  animation: fadeUp .8s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1.1s forwards;
}

.page-base {
  .page-wrapper {
    position: relative;
  }
  .page-wrapper {
    margin-left: auto;
    margin-right: auto;
  }
  .page-wrapper {
    max-width: 1024px;
  }
  .page-wrapper {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  .page-wrapper {
    main {
      opacity: 0
    }
    main {
      position: absolute;
    }
    main {
      right: 0px;
    }
    main {
      min-height: 100vh;
    }
    main {
      max-width: 1024px;
    }
    main {
      border-radius: 0.75rem;
    }
    main {
      border-width: 1px;
    }
    main {
      --tw-border-opacity: 1;
      border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
    }
    main {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
    }
    main:is(.dark *) {
      --tw-border-opacity: 1;
      border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
    }
    main {
      animation: fadeUpFull .5s cubic-bezier(0.25, 0.46, 0.45, 0.94) .5s forwards;
      .dark & {
        background-color: var(--color-bg);
      }
    }
  }
}

.swup-page-home {
  .page-wrapper {
    position: absolute;
  }
  .page-wrapper {
    right: 0px;
  }
  .page-wrapper {
    top: 0px;
  }
  .page-wrapper {
    width: 100%;
  }
  .page-wrapper {
    max-width: 100%;
  }
  .page-wrapper {
    main {
      opacity: 0
    }
    main {
      position: absolute;
    }
    main {
      right: 0px;
    }
    main {
      min-height: 100vh;
    }
    main {
      max-width: 1024px;
    }
    main {
      border-radius: 0.75rem;
    }
    main {
      border-width: 1px;
    }
    main {
      --tw-border-opacity: 1;
      border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
    }
    main {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
    }
    main:is(.dark *) {
      --tw-border-opacity: 1;
      border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
    }
    main {
      animation: fadeUpFull .5s cubic-bezier(0.25, 0.46, 0.45, 0.94) .5s forwards;
      .dark & {
        background-color: var(--color-bg);
      }
    }
  }
  div.fade-out-animation {
    main {
      opacity: 1;
      animation-name: fadeOutFull;
      animation-duration: 1s;
      animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
      animation-fill-mode: forwards;
    }
    .bg-blur {
      position: absolute;
    }
    .bg-blur {
      top: 0px;
    }
    .bg-blur {
      left: 0px;
    }
    .bg-blur {
      height: 100vh;
    }
    .bg-blur {
      width: 100%;
    }
    .bg-blur {
      opacity: 1;
      animation: fadeOut .5s ease-in-out 1s forwards;
    }
  }
  .bg-blur {
    position: fixed;
  }
  .bg-blur {
    top: 0px;
  }
  .bg-blur {
    left: 0px;
  }
  .bg-blur {
    height: 100vh;
  }
  .bg-blur {
    width: 100%;
  }
  .bg-blur {
    opacity: 0;
    animation: fadeIn .5s ease-in-out forwards;
    -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
  }
}

.plyr--video {
  overflow: hidden;
  border-radius: 8px;
  .plyr__control {
    color: var(--plyr-color-main) !important;
    padding: 14px 10px;
  }
}

.plyr__control svg {
  fill: var(--plyr-color-main) !important;
  stroke: var(--plyr-color-main) !important;
}

button.plyr__control[aria-label="Play"] {
  border: 1px solid var(--plyr-color-main);
  padding: 1.5rem;
  &:hover {
    background-color: none;
    scale: 1.1;
    svg {
      fill: #000000 !important;
      stroke: #000000 !important;
    }
  }
}

.plyr--video .plyr__control:hover {
  background-color: transparent;
}

.plyr__controls button.plyr__controls__item[aria-label="Play"] {
  background-color: transparent;
  border: unset;
}

.plyr__controls {
  position: relative;
  justify-content: space-between;
}

.plyr_duration_times {
  display: flex;
}

.plyr__progress {
  position: absolute;
  bottom: 2px;
  width: 100%;
  left: 50%;
  transform: translateX(-50%);
  padding: 0 22px;
  margin: unset ;
}

.plyr__progress__buffer {
  padding: 0 22px;
}

.plyr__time+.plyr__time:before  {
  content: "-";
  margin-right: 0px;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/* ! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

body {
  font-family: GeneralSans-Variable, serif;
  background-color: var(--color-bg);
  color: var(--color-text);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.bottom-2 {
  bottom: 0.5rem;
}

.left-0 {
  left: 0px;
}

.left-auto {
  left: auto;
}

.right-0 {
  right: 0px;
}

.right-2 {
  right: 0.5rem;
}

.right-4 {
  right: 1rem;
}

.top-0 {
  top: 0px;
}

.top-2 {
  top: 0.5rem;
}

.top-4 {
  top: 1rem;
}

.-z-20 {
  z-index: -20;
}

.z-50 {
  z-index: 50;
}

.z-\[9999\] {
  z-index: 9999;
}

.z-\[99\] {
  z-index: 99;
}

.m-1 {
  margin: 0.25rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.ml-8 {
  margin-left: 2rem;
}

.ml-auto {
  margin-left: auto;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-20 {
  margin-top: 5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.aspect-\[5\/6\] {
  aspect-ratio: 5/6;
}

.h-2 {
  height: 0.5rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-auto {
  height: auto;
}

.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}

.h-full {
  height: 100%;
}

.max-h-\[90vh\] {
  max-height: 90vh;
}

.w-11\/12 {
  width: 91.666667%;
}

.w-12 {
  width: 3rem;
}

.w-6 {
  width: 1.5rem;
}

.w-8 {
  width: 2rem;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.w-max {
  width: -moz-max-content;
  width: max-content;
}

.min-w-60 {
  min-width: 15rem;
}

.max-w-6xl {
  max-width: 72rem;
}

.max-w-screen-lg {
  max-width: 1024px;
}

.max-w-screen-xl {
  max-width: 1280px;
}

.-translate-x-10 {
  --tw-translate-x: -2.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-10 {
  --tw-translate-x: 2.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-50 {
  --tw-scale-x: .5;
  --tw-scale-y: .5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-zoom-in {
  cursor: zoom-in;
}

.cursor-zoom-out {
  cursor: zoom-out;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
}

.border-slate-950 {
  --tw-border-opacity: 1;
  border-color: rgb(2 6 23 / var(--tw-border-opacity, 1));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}

.bg-green-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(134 239 172 / var(--tw-bg-opacity, 1));
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity, 1));
}

.bg-neutral-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity, 1));
}

.bg-neutral-950 {
  --tw-bg-opacity: 1;
  background-color: rgb(10 10 10 / var(--tw-bg-opacity, 1));
}

.bg-purple {
  --tw-bg-opacity: 1;
  background-color: rgb(223 217 235 / var(--tw-bg-opacity, 1));
}

.bg-secondary {
  --tw-bg-opacity: 1;
  background-color: rgb(237 228 224 / var(--tw-bg-opacity, 1));
}

.bg-slate-950 {
  --tw-bg-opacity: 1;
  background-color: rgb(2 6 23 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-opacity-80 {
  --tw-bg-opacity: 0.8;
}

.fill-secondary {
  fill: #EDE4E0;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-center {
  -o-object-position: center;
     object-position: center;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pr-1 {
  padding-right: 0.25rem;
}

.text-center {
  text-align: center;
}

.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-page-title {
  font-size: clamp(2rem, 4vw, 4.5rem);
}

.text-paragraph-title {
  font-size: clamp(1.5rem, 2vw, 2.35rem);
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-subtitle {
  font-size: clamp(1.2rem, 1.5vw, 1.8rem);
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.leading-none {
  line-height: 1;
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-secondary {
  --tw-text-opacity: 1;
  color: rgb(237 228 224 / var(--tw-text-opacity, 1));
}

.text-slate-950 {
  --tw-text-opacity: 1;
  color: rgb(2 6 23 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.opacity-0 {
  opacity: 0;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.blur-sm {
  --tw-blur: blur(4px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.delay-300 {
  transition-delay: 300ms;
}

.duration-1000 {
  transition-duration: 1000ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (min-width: 1024px) {
  .lg\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .lg\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .lg\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .lg\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .lg\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .lg\:container {
      max-width: 1536px;
    }
  }
}

.hover\:rotate-12:hover {
  --tw-rotate: 12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:rotate-45:hover {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-black:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.hover\:bg-secondary:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(237 228 224 / var(--tw-bg-opacity, 1));
}

.hover\:bg-slate-950:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(2 6 23 / var(--tw-bg-opacity, 1));
}

.hover\:bg-white:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-secondary:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(237 228 224 / var(--tw-ring-opacity, 1));
}

.focus\:ring-opacity-75:focus {
  --tw-ring-opacity: 0.75;
}

.group:hover .group-hover\:rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:fill-black {
  fill: #000;
}

.group:hover .group-hover\:fill-secondary {
  fill: #EDE4E0;
}

.group:hover .group-hover\:fill-white {
  fill: #fff;
}

.group:hover .group-hover\:stroke-white {
  stroke: #fff;
}

.dark\:block:is(.dark *) {
  display: block;
}

.dark\:hidden:is(.dark *) {
  display: none;
}

.dark\:border-gray-700:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity, 1));
}

.dark\:border-white:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
}

.dark\:bg-purple:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(223 217 235 / var(--tw-bg-opacity, 1));
}

.dark\:bg-slate-700:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(51 65 85 / var(--tw-bg-opacity, 1));
}

.dark\:bg-slate-800:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 41 59 / var(--tw-bg-opacity, 1));
}

.dark\:fill-slate-800:is(.dark *) {
  fill: #1e293b;
}

.dark\:fill-white:is(.dark *) {
  fill: #fff;
}

.dark\:stroke-white:is(.dark *) {
  stroke: #fff;
}

.dark\:text-neutral-900:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity, 1));
}

.dark\:text-white:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.dark\:hover\:bg-slate-700:hover:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(51 65 85 / var(--tw-bg-opacity, 1));
}

.dark\:hover\:bg-white:hover:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.dark\:hover\:text-black:hover:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}

.dark\:hover\:text-slate-950:hover:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(2 6 23 / var(--tw-text-opacity, 1));
}

.group:hover .dark\:group-hover\:fill-black:is(.dark *) {
  fill: #000;
}

.group:hover .dark\:group-hover\:fill-white:is(.dark *) {
  fill: #fff;
}

.group:hover .dark\:group-hover\:stroke-black:is(.dark *) {
  stroke: #000;
}

@media (min-width: 768px) {
  .md\:mt-20 {
    margin-top: 5rem;
  }

  .md\:mt-8 {
    margin-top: 2rem;
  }

  .md\:w-full {
    width: 100%;
  }

  .md\:gap-4 {
    gap: 1rem;
  }

  .md\:overflow-hidden {
    overflow: hidden;
  }

  .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .md\:text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .md\:text-subtitle {
    font-size: clamp(1.2rem, 1.5vw, 1.8rem);
  }
}

@media (min-width: 1024px) {
  .lg\:aspect-\[2\/3\] {
    aspect-ratio: 2/3;
  }

  .lg\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

@media (min-width: 1280px) {
  .xl\:fixed {
    position: fixed;
  }

  .xl\:aspect-\[3\/4\] {
    aspect-ratio: 3/4;
  }

  .xl\:w-4\/5 {
    width: 80%;
  }

  .xl\:-translate-x-24 {
    --tw-translate-x: -6rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .xl\:translate-x-24 {
    --tw-translate-x: 6rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .xl\:p-4 {
    padding: 1rem;
  }
}

@media (min-width: 1536px) {
  .\32xl\:-translate-x-32 {
    --tw-translate-x: -8rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .\32xl\:translate-x-32 {
    --tw-translate-x: 8rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
